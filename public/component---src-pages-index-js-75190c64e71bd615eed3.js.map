{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["pageQuery","IndexPage","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","nextPage","toString","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags","rel","style","textDecoration"],"mappings":"4OAoFaA,EAAS,YAwCPC,UAlHG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAEhCG,EAAW,GAAkBC,WAuBnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,OACNC,SAAU,CAAC,SAAD,2DASZ,yBAAKC,UAAU,cACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,kBACZV,EAAMW,KAAI,SAAAC,GACT,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAChC,kBAAC,IAAD,CAAMQ,GAAIN,EAAKE,KAAKK,OAAOC,KAAMV,UAAU,aACzC,wBAAIA,UAAU,SAASE,EAAKE,KAAKC,YAAYP,QAE/C,2BAAOE,UAAU,qBACf,wCAAcE,EAAKE,KAAKC,YAAYM,OAEtC,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,kBAAC,IAAD,CAAMJ,GAAIN,EAAKE,KAAKK,OAAOC,KAAMV,UAAU,gBACzC,2BAAOA,UAAU,uBAAjB,oBAEF,yBAAKA,UAAU,WArDT,SAAAG,GAClB,IAAMU,EAAW,GAiBjB,OAhBAV,EAAKW,SAAQ,SAACC,EAAKC,GACjBvB,EAAOqB,SAAQ,SAAAG,GACTF,IAAQE,EAAMF,KAChBF,EAASK,KACP,kBAAC,IAAD,CACEZ,IAAKU,EACLD,IAAKE,EAAMF,IACXI,KAAMF,EAAME,KACZC,KAAMH,EAAMG,KACZC,KAAMJ,EAAMI,KACZC,MAAOL,EAAMK,eAMhBT,EAmC+BU,CAAYpB,QAI5C,yBAAKH,UAAU,oBACb,kBAAC,IAAD,CAAMQ,GAAIZ,EAAU4B,IAAI,OAAOC,MAAO,CAAEC,eAAe,SACrD,0BAAM1B,UAAU,aAAhB","file":"component---src-pages-index-js-75190c64e71bd615eed3.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Sidebar from \"../components/sidebar/Sidebar\";\nimport TechTag from \"../components/tags/TechTag\";\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const labels = data.site.siteMetadata.labels;\n  const currentPage = 1;\n  const nextPage = (currentPage + 1).toString();\n\n  const getTechTags = tags => {\n    const techTags = [];\n    tags.forEach((tag, i) => {\n      labels.forEach(label => {\n        if (tag === label.tag) {\n          techTags.push(\n            <TechTag\n              key={i}\n              tag={label.tag}\n              tech={label.tech}\n              name={label.name}\n              size={label.size}\n              color={label.color}\n            />\n          );\n        }\n      });\n    });\n    return techTags;\n  };\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Home\"\n        keywords={[\n          `gatsby`,\n          `javascript`,\n          `react`,\n          `web development`,\n          `blog`,\n          `graphql`,\n        ]}\n      />\n      <div className=\"index-main\">\n        <div className=\"sidebar px-4 py-2\">\n          <Sidebar />\n        </div>\n        <div className=\"post-list-main\">\n          {posts.map(post => {\n            const tags = post.node.frontmatter.tags;\n            return (\n              <div key={post.node.id} className=\"container mt-5\">\n                <Link to={post.node.fields.slug} className=\"text-dark\">\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                </Link>\n                <small className=\"d-block text-info\">\n                  <i>Posted on {post.node.frontmatter.date}</i>\n                </small>\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                <Link to={post.node.fields.slug} className=\"text-primary\">\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\n                </Link>\n                <div className=\"d-block\">{getTechTags(tags)}</div>\n              </div>\n            );\n          })}\n          <div className=\"mt-4 text-center\">\n            <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\n              <span className=\"text-dark\">Next Page â†’</span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        author\n        labels {\n          tag\n          tech\n          name\n          size\n          color\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 3\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          html\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}